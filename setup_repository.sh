#!/bin/bash

# Repository Setup Script for Regime-Switch-Dynamics
# This script creates the complete directory structure

echo "Setting up Regime-Switch-Dynamics repository structure..."

# Create main directories
mkdir -p theory
mkdir -p empirical/ai_investment
mkdir -p empirical/validation_studies
mkdir -p data/simulated
mkdir -p data/processed
mkdir -p notebooks
mkdir -p tests
mkdir -p docs
mkdir -p figures

# Create __init__.py files for Python package structure
touch theory/__init__.py
touch empirical/__init__.py
touch empirical/ai_investment/__init__.py
touch empirical/validation_studies/__init__.py
touch tests/__init__.py

# Create placeholder files in theory/
echo "# Core boundary crossing theory" > theory/boundary_crossing_theory.py
echo "# Empirical validation tests" > theory/boundary_testing.py
echo "# Spatial spillover boundaries" > theory/spatial_boundaries.py
echo "# Temporal regime boundaries" > theory/temporal_boundaries.py
echo "# Monte Carlo validation" > theory/monte_carlo_validation.py

# Create placeholder files in empirical/
echo "# AI investment boundary analysis" > empirical/ai_investment/boundary_analysis.py
echo "# Executive heterogeneity analysis" > empirical/ai_investment/executive_heterogeneity.py
echo "# Industry transformation analysis" > empirical/ai_investment/industry_transformation.py
echo "# Method comparison studies" > empirical/validation_studies/comparison_studies.py

# Create test files
echo "# Tests for theoretical components" > tests/test_theory.py
echo "# Tests for empirical components" > tests/test_empirical.py
echo "# Integration tests" > tests/test_integration.py

# Create documentation files
echo "# Methodology Guide" > docs/methodology_guide.md
echo "# API Reference" > docs/api_reference.md

# Create .gitignore
cat > .gitignore << 'EOF'
# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Jupyter Notebook
.ipynb_checkpoints
*/.ipynb_checkpoints/*

# Data files
*.csv
*.xlsx
*.xls
*.dat
data/raw/*
!data/simulated/
!data/processed/README.md

# Results
results/
output/
figures/*.png
figures/*.pdf
!figures/README.md

# IDE
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# Testing
.pytest_cache/
.coverage
htmlcov/

# Environment
.env
.venv
EOF

# Create README files for data directories
cat > data/README.md << 'EOF'
# Data Directory

## Structure

- `simulated/`: Synthetic data for testing and validation
- `processed/`: Cleaned empirical datasets ready for analysis

## Data Privacy

Raw data files are not included in this repository for privacy reasons.
EOF

cat > data/simulated/README.md << 'EOF'
# Simulated Data

This directory contains synthetic datasets generated for:
- Testing theoretical methods
- Monte Carlo validation
- Examples and tutorials

Scripts to generate simulated data are in `theory/monte_carlo_validation.py`
EOF

cat > data/processed/README.md << 'EOF'
# Processed Data

This directory contains cleaned empirical datasets.

## Data Sources
[Document your data sources here]

## Processing Scripts
[Link to processing scripts]

## Note
Due to confidentiality, raw data is not included in this repository.
EOF

# Create README for figures
cat > figures/README.md << 'EOF'
# Figures

This directory contains generated figures for papers and presentations.

Figures are generated by scripts in `notebooks/` or `empirical/` directories.
EOF

# Create basic pytest configuration
cat > pytest.ini << 'EOF'
[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --cov=theory --cov=empirical --cov-report=html
EOF

# Create setup.py for package installation
cat > setup.py << 'EOF'
from setuptools import setup, find_packages

setup(
    name="regime-switch-dynamics",
    version="0.1.0",
    author="Tatsuru Kikuchi",
    description="Framework for boundary detection in treatment effects",
    packages=find_packages(),
    install_requires=[
        "numpy>=1.24.0",
        "pandas>=2.0.0",
        "scipy>=1.10.0",
        "matplotlib>=3.7.0",
        "statsmodels>=0.14.0",
        "scikit-learn>=1.3.0",
        "networkx>=3.1",
    ],
    python_requires=">=3.9",
)
EOF

# Create LICENSE file (MIT License)
cat > LICENSE << 'EOF'
MIT License

Copyright (c) 2025 Tatsuru Kikuchi

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
EOF

echo "Repository structure created successfully!"
echo ""
echo "Next steps:"
echo "1. Run: chmod +x setup_repository.sh"
echo "2. Run: ./setup_repository.sh"
echo "3. Create virtual environment: python -m venv venv"
echo "4. Activate: source venv/bin/activate"
echo "5. Install dependencies: pip install -r requirements.txt"
echo "6. Install package: pip install -e ."
echo ""
echo "Repository is ready for development!"
